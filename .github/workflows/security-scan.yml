name: Security Scan

on:
  push:
    branches: [ main, PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API ] #remove PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API after testing
  pull_request:
    branches: [ main, PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API ] #remove PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API after testing
  schedule:
    - cron: '0 7 * * 1'

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7'
          # Don't use bundler-cache to avoid deployment mode issues
          bundler-cache: false
      
      - name: Configure Bundler
        run: |
          gem install bundler
          bundle config unset deployment
          bundle config set --local path vendor/bundle
          bundle install --jobs 4 --retry 3
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Install Snyk CLI
        run: npm install -g snyk
          
      - name: Run Snyk to check Ruby dependencies
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          # Run snyk directly against the Gemfile
          snyk test --file=Gemfile --json > snyk-results.json || true
          
      - name: Generate vulnerability summary
        id: summary
        run: |
          # Parse the Snyk results and generate a summary
          echo "Generating vulnerability summary..."
          
          if [ -s snyk-results.json ]; then
            # Count vulnerabilities by severity
            HIGH_COUNT=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
            MEDIUM_COUNT=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
            LOW_COUNT=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
            
            # Create a summary
            echo "SUMMARY<<EOF" >> $GITHUB_ENV
            echo "## 🔒 Snyk Security Scan Results" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "| Severity | Count |" >> $GITHUB_ENV
            echo "|----------|-------|" >> $GITHUB_ENV
            echo "| 🔴 High | $HIGH_COUNT |" >> $GITHUB_ENV
            echo "| 🟠 Medium | $MEDIUM_COUNT |" >> $GITHUB_ENV
            echo "| 🟡 Low | $LOW_COUNT |" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            
            # Get high and medium vulnerabilities details (up to 10 of each)
            if [ $HIGH_COUNT -gt 0 ] || [ $MEDIUM_COUNT -gt 0 ]; then
              echo "### Critical Vulnerabilities:" >> $GITHUB_ENV
              echo "" >> $GITHUB_ENV
              
              # Process high vulnerabilities
              if [ $HIGH_COUNT -gt 0 ]; then
                echo "#### 🔴 High Impact" >> $GITHUB_ENV
                grep -o '"packageName":"[^"]*".*"severity":"high".*"title":"[^"]*"' snyk-results.json | sed 's/"packageName":"//g; s/","severity.*"title":"/: /g; s/".*//g' | head -10 | awk '{print "- **" $0 "**"}' >> $GITHUB_ENV
                if [ $HIGH_COUNT -gt 10 ]; then
                  echo "- ... and $(($HIGH_COUNT - 10)) more high vulnerabilities" >> $GITHUB_ENV
                fi
                echo "" >> $GITHUB_ENV
              fi
              
              # Process medium vulnerabilities
              if [ $MEDIUM_COUNT -gt 0 ]; then
                echo "#### 🟠 Medium Impact" >> $GITHUB_ENV
                grep -o '"packageName":"[^"]*".*"severity":"medium".*"title":"[^"]*"' snyk-results.json | sed 's/"packageName":"//g; s/","severity.*"title":"/: /g; s/".*//g' | head -10 | awk '{print "- **" $0 "**"}' >> $GITHUB_ENV
                if [ $MEDIUM_COUNT -gt 10 ]; then
                  echo "- ... and $(($MEDIUM_COUNT - 10)) more medium vulnerabilities" >> $GITHUB_ENV
                fi
              fi
              
              echo "" >> $GITHUB_ENV
            else
              echo "✅ No high or medium vulnerabilities found!" >> $GITHUB_ENV
            fi
          else
            echo "SUMMARY<<EOF" >> $GITHUB_ENV
            echo "## 🔒 Snyk Security Scan Results" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "⚠️ Error running Snyk scan. Please check workflow logs for details." >> $GITHUB_ENV
          fi
          echo "EOF" >> $GITHUB_ENV
      
      - name: Add PR comment with vulnerability summary
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = process.env.SUMMARY;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      
      - name: Print vulnerability summary
        run: echo "$SUMMARY"
