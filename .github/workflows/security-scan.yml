name: Security Scan

on:
  push:
    branches: [ main, PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API ] #remove PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API after testing
  pull_request:
    branches: [ main, PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API ] #remove PAT-313-Setup-Security-Scanning-With-Snyk-for-Teams-API after testing
  schedule:
    - cron: '0 7 * * 1'

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7'
          bundler-cache: true
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Install Snyk CLI
        run: npm install -g snyk
          
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          # Save output to a file and to a variable for summary generation
          snyk test --json > snyk-results.json || true
          
      - name: Generate vulnerability summary
        id: summary
        run: |
          # Make sure jq is installed
          sudo apt-get update -y && sudo apt-get install -y jq
          
          # Parse the Snyk results and generate a summary
          echo "Generating vulnerability summary..."
          
          # Count vulnerabilities by severity
          HIGH_COUNT=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
          MEDIUM_COUNT=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
          LOW_COUNT=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
          
          # Create a summary
          echo "SUMMARY<<EOF" >> $GITHUB_ENV
          echo "## ðŸ”’ Snyk Security Scan Results" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "| Severity | Count |" >> $GITHUB_ENV
          echo "|----------|-------|" >> $GITHUB_ENV
          echo "| ðŸ”´ High | $HIGH_COUNT |" >> $GITHUB_ENV
          echo "| ðŸŸ  Medium | $MEDIUM_COUNT |" >> $GITHUB_ENV
          echo "| ðŸŸ¡ Low | $LOW_COUNT |" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          
          # Get high and medium vulnerabilities details (up to 10 of each)
          if [ $HIGH_COUNT -gt 0 ] || [ $MEDIUM_COUNT -gt 0 ]; then
            echo "### Critical Vulnerabilities:" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            
            # Process high vulnerabilities
            if [ $HIGH_COUNT -gt 0 ]; then
              echo "#### ðŸ”´ High Impact" >> $GITHUB_ENV
              jq -r '.vulnerabilities[] | select(.severity == "high") | "- **\(.packageName)**: \(.title)"' snyk-results.json | head -10 >> $GITHUB_ENV
              if [ $HIGH_COUNT -gt 10 ]; then
                echo "- ... and $(($HIGH_COUNT - 10)) more high vulnerabilities" >> $GITHUB_ENV
              fi
              echo "" >> $GITHUB_ENV
            fi
            
            # Process medium vulnerabilities
            if [ $MEDIUM_COUNT -gt 0 ]; then
              echo "#### ðŸŸ  Medium Impact" >> $GITHUB_ENV
              jq -r '.vulnerabilities[] | select(.severity == "medium") | "- **\(.packageName)**: \(.title)"' snyk-results.json | head -10 >> $GITHUB_ENV
              if [ $MEDIUM_COUNT -gt 10 ]; then
                echo "- ... and $(($MEDIUM_COUNT - 10)) more medium vulnerabilities" >> $GITHUB_ENV
              fi
            fi
            
            echo "" >> $GITHUB_ENV
          else
            echo "âœ… No high or medium vulnerabilities found!" >> $GITHUB_ENV
          fi
          echo "EOF" >> $GITHUB_ENV
      
      - name: Add PR comment with vulnerability summary
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = process.env.SUMMARY;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      
      - name: Print vulnerability summary
        run: echo "$SUMMARY"

      - name: Output critical vulnerabilities to logs
        run: |
          echo "========== CRITICAL VULNERABILITIES ==========="
          jq -r '.vulnerabilities[] | select(.severity == "high" or .severity == "medium") | "\(.severity): \(.packageName) - \(.title)"' snyk-results.json
          echo "==============================================="
